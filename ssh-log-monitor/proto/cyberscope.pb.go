// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/cyberscope.proto

package logs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PacketType int32

const (
	PacketType_TCP PacketType = 0
	PacketType_UDP PacketType = 1
)

// Enum value maps for PacketType.
var (
	PacketType_name = map[int32]string{
		0: "TCP",
		1: "UDP",
	}
	PacketType_value = map[string]int32{
		"TCP": 0,
		"UDP": 1,
	}
)

func (x PacketType) Enum() *PacketType {
	p := new(PacketType)
	*p = x
	return p
}

func (x PacketType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PacketType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_cyberscope_proto_enumTypes[0].Descriptor()
}

func (PacketType) Type() protoreflect.EnumType {
	return &file_proto_cyberscope_proto_enumTypes[0]
}

func (x PacketType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PacketType.Descriptor instead.
func (PacketType) EnumDescriptor() ([]byte, []int) {
	return file_proto_cyberscope_proto_rawDescGZIP(), []int{0}
}

type LinuxLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceIp      string                 `protobuf:"bytes,2,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ProcessName   string                 `protobuf:"bytes,4,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinuxLogRequest) Reset() {
	*x = LinuxLogRequest{}
	mi := &file_proto_cyberscope_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinuxLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinuxLogRequest) ProtoMessage() {}

func (x *LinuxLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cyberscope_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinuxLogRequest.ProtoReflect.Descriptor instead.
func (*LinuxLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_cyberscope_proto_rawDescGZIP(), []int{0}
}

func (x *LinuxLogRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *LinuxLogRequest) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *LinuxLogRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *LinuxLogRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

// TODO: Set correct fields for WindowsLogRequest
type WindowsLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceId      string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceIp      string                 `protobuf:"bytes,2,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	Timestamp     string                 `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ProcessName   string                 `protobuf:"bytes,4,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WindowsLogRequest) Reset() {
	*x = WindowsLogRequest{}
	mi := &file_proto_cyberscope_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WindowsLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowsLogRequest) ProtoMessage() {}

func (x *WindowsLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cyberscope_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowsLogRequest.ProtoReflect.Descriptor instead.
func (*WindowsLogRequest) Descriptor() ([]byte, []int) {
	return file_proto_cyberscope_proto_rawDescGZIP(), []int{1}
}

func (x *WindowsLogRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *WindowsLogRequest) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *WindowsLogRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *WindowsLogRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

type PacketRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DeviceId        string                 `protobuf:"bytes,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	SourceIp        string                 `protobuf:"bytes,2,opt,name=source_ip,json=sourceIp,proto3" json:"source_ip,omitempty"`
	DestinationIp   string                 `protobuf:"bytes,3,opt,name=destination_ip,json=destinationIp,proto3" json:"destination_ip,omitempty"`
	SourcePort      int32                  `protobuf:"varint,4,opt,name=source_port,json=sourcePort,proto3" json:"source_port,omitempty"`
	DestinationPort int32                  `protobuf:"varint,5,opt,name=destination_port,json=destinationPort,proto3" json:"destination_port,omitempty"`
	Size            int32                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Timestamp       string                 `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Type            PacketType             `protobuf:"varint,8,opt,name=type,proto3,enum=PacketType" json:"type,omitempty"`
	ProcessId       int32                  `protobuf:"varint,9,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	ProcessName     string                 `protobuf:"bytes,10,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	ExecutablePath  string                 `protobuf:"bytes,11,opt,name=executable_path,json=executablePath,proto3" json:"executable_path,omitempty"`
	FileHash        string                 `protobuf:"bytes,12,opt,name=file_hash,json=fileHash,proto3" json:"file_hash,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PacketRequest) Reset() {
	*x = PacketRequest{}
	mi := &file_proto_cyberscope_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketRequest) ProtoMessage() {}

func (x *PacketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cyberscope_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketRequest.ProtoReflect.Descriptor instead.
func (*PacketRequest) Descriptor() ([]byte, []int) {
	return file_proto_cyberscope_proto_rawDescGZIP(), []int{2}
}

func (x *PacketRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *PacketRequest) GetSourceIp() string {
	if x != nil {
		return x.SourceIp
	}
	return ""
}

func (x *PacketRequest) GetDestinationIp() string {
	if x != nil {
		return x.DestinationIp
	}
	return ""
}

func (x *PacketRequest) GetSourcePort() int32 {
	if x != nil {
		return x.SourcePort
	}
	return 0
}

func (x *PacketRequest) GetDestinationPort() int32 {
	if x != nil {
		return x.DestinationPort
	}
	return 0
}

func (x *PacketRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PacketRequest) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *PacketRequest) GetType() PacketType {
	if x != nil {
		return x.Type
	}
	return PacketType_TCP
}

func (x *PacketRequest) GetProcessId() int32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *PacketRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *PacketRequest) GetExecutablePath() string {
	if x != nil {
		return x.ExecutablePath
	}
	return ""
}

func (x *PacketRequest) GetFileHash() string {
	if x != nil {
		return x.FileHash
	}
	return ""
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_proto_cyberscope_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_cyberscope_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_cyberscope_proto_rawDescGZIP(), []int{3}
}

func (x *StatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_proto_cyberscope_proto protoreflect.FileDescriptor

const file_proto_cyberscope_proto_rawDesc = "" +
	"\n" +
	"\x16proto/cyberscope.proto\"\x8c\x01\n" +
	"\x0fLinuxLogRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1b\n" +
	"\tsource_ip\x18\x02 \x01(\tR\bsourceIp\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12!\n" +
	"\fprocess_name\x18\x04 \x01(\tR\vprocessName\"\x8e\x01\n" +
	"\x11WindowsLogRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1b\n" +
	"\tsource_ip\x18\x02 \x01(\tR\bsourceIp\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\tR\ttimestamp\x12!\n" +
	"\fprocess_name\x18\x04 \x01(\tR\vprocessName\"\x97\x03\n" +
	"\rPacketRequest\x12\x1b\n" +
	"\tdevice_id\x18\x01 \x01(\tR\bdeviceId\x12\x1b\n" +
	"\tsource_ip\x18\x02 \x01(\tR\bsourceIp\x12%\n" +
	"\x0edestination_ip\x18\x03 \x01(\tR\rdestinationIp\x12\x1f\n" +
	"\vsource_port\x18\x04 \x01(\x05R\n" +
	"sourcePort\x12)\n" +
	"\x10destination_port\x18\x05 \x01(\x05R\x0fdestinationPort\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x05R\x04size\x12\x1c\n" +
	"\ttimestamp\x18\a \x01(\tR\ttimestamp\x12\x1f\n" +
	"\x04type\x18\b \x01(\x0e2\v.PacketTypeR\x04type\x12\x1d\n" +
	"\n" +
	"process_id\x18\t \x01(\x05R\tprocessId\x12!\n" +
	"\fprocess_name\x18\n" +
	" \x01(\tR\vprocessName\x12'\n" +
	"\x0fexecutable_path\x18\v \x01(\tR\x0eexecutablePath\x12\x1b\n" +
	"\tfile_hash\x18\f \x01(\tR\bfileHash\"(\n" +
	"\x0eStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status*\x1e\n" +
	"\n" +
	"PacketType\x12\a\n" +
	"\x03TCP\x10\x00\x12\a\n" +
	"\x03UDP\x10\x012v\n" +
	"\n" +
	"LogService\x121\n" +
	"\fSendLinuxLog\x12\x10.LinuxLogRequest\x1a\x0f.StatusResponse\x125\n" +
	"\x0eSendWindowsLog\x12\x12.WindowsLogRequest\x1a\x0f.StatusResponse2>\n" +
	"\rPacketService\x12-\n" +
	"\n" +
	"SendPacket\x12\x0e.PacketRequest\x1a\x0f.StatusResponseB\x1cZ\x1assh-log-monitor/proto;logsb\x06proto3"

var (
	file_proto_cyberscope_proto_rawDescOnce sync.Once
	file_proto_cyberscope_proto_rawDescData []byte
)

func file_proto_cyberscope_proto_rawDescGZIP() []byte {
	file_proto_cyberscope_proto_rawDescOnce.Do(func() {
		file_proto_cyberscope_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_cyberscope_proto_rawDesc), len(file_proto_cyberscope_proto_rawDesc)))
	})
	return file_proto_cyberscope_proto_rawDescData
}

var file_proto_cyberscope_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_cyberscope_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_cyberscope_proto_goTypes = []any{
	(PacketType)(0),           // 0: PacketType
	(*LinuxLogRequest)(nil),   // 1: LinuxLogRequest
	(*WindowsLogRequest)(nil), // 2: WindowsLogRequest
	(*PacketRequest)(nil),     // 3: PacketRequest
	(*StatusResponse)(nil),    // 4: StatusResponse
}
var file_proto_cyberscope_proto_depIdxs = []int32{
	0, // 0: PacketRequest.type:type_name -> PacketType
	1, // 1: LogService.SendLinuxLog:input_type -> LinuxLogRequest
	2, // 2: LogService.SendWindowsLog:input_type -> WindowsLogRequest
	3, // 3: PacketService.SendPacket:input_type -> PacketRequest
	4, // 4: LogService.SendLinuxLog:output_type -> StatusResponse
	4, // 5: LogService.SendWindowsLog:output_type -> StatusResponse
	4, // 6: PacketService.SendPacket:output_type -> StatusResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_cyberscope_proto_init() }
func file_proto_cyberscope_proto_init() {
	if File_proto_cyberscope_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_cyberscope_proto_rawDesc), len(file_proto_cyberscope_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_cyberscope_proto_goTypes,
		DependencyIndexes: file_proto_cyberscope_proto_depIdxs,
		EnumInfos:         file_proto_cyberscope_proto_enumTypes,
		MessageInfos:      file_proto_cyberscope_proto_msgTypes,
	}.Build()
	File_proto_cyberscope_proto = out.File
	file_proto_cyberscope_proto_goTypes = nil
	file_proto_cyberscope_proto_depIdxs = nil
}
